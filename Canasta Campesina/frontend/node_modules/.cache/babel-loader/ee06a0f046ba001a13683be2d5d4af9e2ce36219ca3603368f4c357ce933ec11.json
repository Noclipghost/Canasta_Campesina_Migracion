{"ast":null,"code":"// frontend/src/services/api.js\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\n\n/**\r\n * Función helper para realizar peticiones HTTP\r\n * @param {string} endpoint - Endpoint de la API\r\n * @param {Object} options - Opciones de la petición\r\n * @returns {Promise} - Promesa con la respuesta\r\n */\nconst apiRequest = async (endpoint, options = {}) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers\n    },\n    ...options\n  };\n  try {\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API Request Error:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Obtener todos los productos\r\n * @returns {Promise<Array>} - Lista de productos\r\n */\nexport const getProducts = async () => {\n  try {\n    // En desarrollo, usar datos mock\n    if (process.env.NODE_ENV === 'development') {\n      return getMockProducts();\n    }\n    return await apiRequest('/productos');\n  } catch (error) {\n    console.warn('API no disponible, usando datos mock:', error);\n    return getMockProducts();\n  }\n};\n\n/**\r\n * Obtener categorías\r\n * @returns {Promise<Array>} - Lista de categorías\r\n */\nexport const getCategories = async () => {\n  try {\n    if (process.env.NODE_ENV === 'development') {\n      return getMockCategories();\n    }\n    return await apiRequest('/categorias');\n  } catch (error) {\n    console.warn('API no disponible, usando datos mock:', error);\n    return getMockCategories();\n  }\n};\n\n/**\r\n * Obtener productores\r\n * @returns {Promise<Array>} - Lista de productores\r\n */\nexport const getProducers = async () => {\n  try {\n    if (process.env.NODE_ENV === 'development') {\n      return getMockProducers();\n    }\n    return await apiRequest('/productores');\n  } catch (error) {\n    console.warn('API no disponible, usando datos mock:', error);\n    return getMockProducers();\n  }\n};\n\n/**\r\n * Obtener ubicaciones\r\n * @returns {Promise<Array>} - Lista de ubicaciones\r\n */\nexport const getLocations = async () => {\n  try {\n    if (process.env.NODE_ENV === 'development') {\n      return getMockLocations();\n    }\n    return await apiRequest('/ubicaciones');\n  } catch (error) {\n    console.warn('API no disponible, usando datos mock:', error);\n    return getMockLocations();\n  }\n};\n\n/**\r\n * Filtrar productos\r\n * @param {Object} filters - Filtros aplicados\r\n * @returns {Promise<Array>} - Lista de productos filtrados\r\n */\nexport const filterProducts = async filters => {\n  try {\n    if (process.env.NODE_ENV === 'development') {\n      return getFilteredMockProducts(filters);\n    }\n    const params = new URLSearchParams();\n    if (filters.category && filters.category !== '') {\n      params.append('categoria', filters.category);\n    }\n    if (filters.producer && filters.producer !== '') {\n      params.append('productor', filters.producer);\n    }\n    if (filters.location && filters.location !== '') {\n      params.append('ubicacion', filters.location);\n    }\n    if (filters.priceMin) {\n      params.append('precioMin', filters.priceMin);\n    }\n    if (filters.priceMax) {\n      params.append('precioMax', filters.priceMax);\n    }\n    return await apiRequest(`/productos/filtrar?${params.toString()}`);\n  } catch (error) {\n    console.warn('API no disponible, usando datos mock filtrados:', error);\n    return getFilteredMockProducts(filters);\n  }\n};\n\n// Datos mock para desarrollo\nconst getMockProducts = () => {\n  return [{\n    id: 1,\n    name: 'Manzanas Rojas Orgánicas',\n    description: 'Manzanas frescas y jugosas cultivadas sin químicos en las montañas de Boyacá',\n    price: 15.99,\n    producer: 'Finca Los Manzanos',\n    category: 'Frutas',\n    location: 'Boyacá',\n    image: '/images/manzanas.jpg'\n  }, {\n    id: 2,\n    name: 'Queso Campesino Artesanal',\n    description: 'Queso fresco elaborado con leche de vacas alimentadas con pasto natural',\n    price: 25.50,\n    producer: 'Lácteos San José',\n    category: 'Lácteos',\n    location: 'Cundinamarca',\n    image: '/images/queso.jpg'\n  }, {\n    id: 3,\n    name: 'Café Orgánico de Altura',\n    description: 'Café premium cultivado a más de 1800 metros sobre el nivel del mar',\n    price: 35.00,\n    producer: 'Café de las Montañas',\n    category: 'Bebidas',\n    location: 'Huila',\n    image: '/images/cafe.jpg'\n  }, {\n    id: 4,\n    name: 'Tomates Cherry Hidropónicos',\n    description: 'Tomates cherry dulces y jugosos cultivados en invernaderos tecnificados',\n    price: 8.99,\n    producer: 'Huerta Verde',\n    category: 'Verduras',\n    location: 'Antioquia',\n    image: '/images/tomates.jpg'\n  }, {\n    id: 5,\n    name: 'Miel de Abeja Pura',\n    description: 'Miel 100% natural de flores silvestres, sin procesar ni pasteurizar',\n    price: 18.75,\n    producer: 'Apiario El Roble',\n    category: 'Endulzantes',\n    location: 'Santander',\n    image: '/images/miel.jpg'\n  }, {\n    id: 6,\n    name: 'Aguacate Hass Premium',\n    description: 'Aguacates de exportación con la mejor calidad y sabor',\n    price: 12.50,\n    producer: 'Finca Verde Esperanza',\n    category: 'Frutas',\n    location: 'Caldas',\n    image: '/images/aguacate.jpg'\n  }, {\n    id: 7,\n    name: 'Panela Pulverizada',\n    description: 'Endulzante natural obtenido de la caña de azúcar orgánica',\n    price: 6.99,\n    producer: 'Trapiche Don Pedro',\n    category: 'Endulzantes',\n    location: 'Valle del Cauca',\n    image: '/images/panela.jpg'\n  }, {\n    id: 8,\n    name: 'Lechuga Hidropónica',\n    description: 'Lechuga fresca cultivada en sistemas hidropónicos controlados',\n    price: 4.50,\n    producer: 'Huerta Verde',\n    category: 'Verduras',\n    location: 'Antioquia',\n    image: '/images/lechuga.jpg'\n  }, {\n    id: 9,\n    name: 'Yogurt Natural Casero',\n    description: 'Yogurt artesanal sin conservantes ni colorantes artificiales',\n    price: 8.99,\n    producer: 'Lácteos San José',\n    category: 'Lácteos',\n    location: 'Cundinamarca',\n    image: '/images/yogurt.jpg'\n  }, {\n    id: 10,\n    name: 'Plátano Hartón',\n    description: 'Plátanos verdes ideales para cocinar, frescos y de gran tamaño',\n    price: 3.99,\n    producer: 'Finca La Esperanza',\n    category: 'Frutas',\n    location: 'Quindío',\n    image: '/images/platano.jpg'\n  }];\n};\nconst getMockCategories = () => {\n  return [{\n    id: 1,\n    name: 'Frutas'\n  }, {\n    id: 2,\n    name: 'Verduras'\n  }, {\n    id: 3,\n    name: 'Lácteos'\n  }, {\n    id: 4,\n    name: 'Bebidas'\n  }, {\n    id: 5,\n    name: 'Endulzantes'\n  }, {\n    id: 6,\n    name: 'Granos'\n  }, {\n    id: 7,\n    name: 'Carnes'\n  }, {\n    id: 8,\n    name: 'Artesanías'\n  }];\n};\nconst getMockProducers = () => {\n  return [{\n    id: 1,\n    name: 'Finca Los Manzanos'\n  }, {\n    id: 2,\n    name: 'Lácteos San José'\n  }, {\n    id: 3,\n    name: 'Café de las Montañas'\n  }, {\n    id: 4,\n    name: 'Huerta Verde'\n  }, {\n    id: 5,\n    name: 'Apiario El Roble'\n  }, {\n    id: 6,\n    name: 'Finca Verde Esperanza'\n  }, {\n    id: 7,\n    name: 'Trapiche Don Pedro'\n  }, {\n    id: 8,\n    name: 'Finca La Esperanza'\n  }];\n};\nconst getMockLocations = () => {\n  return [{\n    id: 1,\n    name: 'Boyacá'\n  }, {\n    id: 2,\n    name: 'Cundinamarca'\n  }, {\n    id: 3,\n    name: 'Huila'\n  }, {\n    id: 4,\n    name: 'Antioquia'\n  }, {\n    id: 5,\n    name: 'Santander'\n  }, {\n    id: 6,\n    name: 'Caldas'\n  }, {\n    id: 7,\n    name: 'Valle del Cauca'\n  }, {\n    id: 8,\n    name: 'Quindío'\n  }];\n};\nconst getFilteredMockProducts = filters => {\n  const products = getMockProducts();\n  return products.filter(product => {\n    // Filtro por búsqueda\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      if (!product.name.toLowerCase().includes(searchTerm) && !product.description.toLowerCase().includes(searchTerm)) {\n        return false;\n      }\n    }\n\n    // Filtro por categoría\n    if (filters.category && filters.category !== '') {\n      if (product.category !== filters.category) return false;\n    }\n\n    // Filtro por productor\n    if (filters.producer && filters.producer !== '') {\n      if (product.producer !== filters.producer) return false;\n    }\n\n    // Filtro por ubicación\n    if (filters.location && filters.location !== '') {\n      if (product.location !== filters.location) return false;\n    }\n\n    // Filtro por precio mínimo\n    if (filters.priceMin) {\n      if (product.price < parseFloat(filters.priceMin)) return false;\n    }\n\n    // Filtro por precio máximo\n    if (filters.priceMax) {\n      if (product.price > parseFloat(filters.priceMax)) return false;\n    }\n    return true;\n  });\n};\n\n/**\r\n * Crear un nuevo producto (solo admin)\r\n * @param {Object} productData - Datos del producto\r\n * @returns {Promise<Object>} - Producto creado\r\n */\nexport const createProduct = async productData => {\n  return await apiRequest('/productos', {\n    method: 'POST',\n    body: JSON.stringify(productData)\n  });\n};\n\n/**\r\n * Actualizar un producto (solo admin)\r\n * @param {number} id - ID del producto\r\n * @param {Object} productData - Datos actualizados\r\n * @returns {Promise<Object>} - Producto actualizado\r\n */\nexport const updateProduct = async (id, productData) => {\n  return await apiRequest(`/productos/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(productData)\n  });\n};\n\n/**\r\n * Eliminar un producto (solo admin)\r\n * @param {number} id - ID del producto\r\n * @returns {Promise<Object>} - Confirmación de eliminación\r\n */\nexport const deleteProduct = async id => {\n  return await apiRequest(`/productos/${id}`, {\n    method: 'DELETE'\n  });\n};\n\n/**\r\n * Autenticar usuario\r\n * @param {Object} credentials - Credenciales de login\r\n * @returns {Promise<Object>} - Datos del usuario autenticado\r\n */\nexport const loginUser = async credentials => {\n  try {\n    return await apiRequest('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n  } catch (error) {\n    // Simulación para desarrollo\n    if (credentials.email === 'admin@canasta.com' && credentials.password === 'admin123') {\n      return {\n        success: true,\n        user: {\n          id: 1,\n          name: 'Administrador',\n          email: 'admin@canasta.com',\n          role: 'admin'\n        }\n      };\n    } else if (credentials.email === 'usuario@canasta.com' && credentials.password === 'user123') {\n      return {\n        success: true,\n        user: {\n          id: 2,\n          name: 'Usuario Demo',\n          email: 'usuario@canasta.com',\n          role: 'user'\n        }\n      };\n    } else {\n      throw new Error('Credenciales incorrectas');\n    }\n  }\n};\n\n/**\r\n * Registrar nuevo usuario\r\n * @param {Object} userData - Datos del nuevo usuario\r\n * @returns {Promise<Object>} - Usuario registrado\r\n */\nexport const registerUser = async userData => {\n  return await apiRequest('/auth/register', {\n    method: 'POST',\n    body: JSON.stringify(userData)\n  });\n};\n\n/**\r\n * Crear pedido\r\n * @param {Object} orderData - Datos del pedido\r\n * @returns {Promise<Object>} - Pedido creado\r\n */\nexport const createOrder = async orderData => {\n  return await apiRequest('/pedidos', {\n    method: 'POST',\n    body: JSON.stringify(orderData)\n  });\n};\n\n/**\r\n * Obtener pedidos del usuario\r\n * @param {number} userId - ID del usuario\r\n * @returns {Promise<Array>} - Lista de pedidos\r\n */\nexport const getUserOrders = async userId => {\n  return await apiRequest(`/pedidos/usuario/${userId}`);\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","apiRequest","endpoint","options","url","config","headers","response","fetch","ok","Error","status","json","error","console","getProducts","NODE_ENV","getMockProducts","warn","getCategories","getMockCategories","getProducers","getMockProducers","getLocations","getMockLocations","filterProducts","filters","getFilteredMockProducts","params","URLSearchParams","category","append","producer","location","priceMin","priceMax","toString","id","name","description","price","image","products","filter","product","search","searchTerm","toLowerCase","includes","parseFloat","createProduct","productData","method","body","JSON","stringify","updateProduct","deleteProduct","loginUser","credentials","email","password","success","user","role","registerUser","userData","createOrder","orderData","getUserOrders","userId"],"sources":["C:/Users/Bedoya/Desktop/Programming learning/Canasta Campesina/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\r\n\r\n/**\r\n * Función helper para realizar peticiones HTTP\r\n * @param {string} endpoint - Endpoint de la API\r\n * @param {Object} options - Opciones de la petición\r\n * @returns {Promise} - Promesa con la respuesta\r\n */\r\nconst apiRequest = async (endpoint, options = {}) => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  \r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...options.headers,\r\n    },\r\n    ...options,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, config);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('API Request Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener todos los productos\r\n * @returns {Promise<Array>} - Lista de productos\r\n */\r\nexport const getProducts = async () => {\r\n  try {\r\n    // En desarrollo, usar datos mock\r\n    if (process.env.NODE_ENV === 'development') {\r\n      return getMockProducts();\r\n    }\r\n    return await apiRequest('/productos');\r\n  } catch (error) {\r\n    console.warn('API no disponible, usando datos mock:', error);\r\n    return getMockProducts();\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener categorías\r\n * @returns {Promise<Array>} - Lista de categorías\r\n */\r\nexport const getCategories = async () => {\r\n  try {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      return getMockCategories();\r\n    }\r\n    return await apiRequest('/categorias');\r\n  } catch (error) {\r\n    console.warn('API no disponible, usando datos mock:', error);\r\n    return getMockCategories();\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener productores\r\n * @returns {Promise<Array>} - Lista de productores\r\n */\r\nexport const getProducers = async () => {\r\n  try {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      return getMockProducers();\r\n    }\r\n    return await apiRequest('/productores');\r\n  } catch (error) {\r\n    console.warn('API no disponible, usando datos mock:', error);\r\n    return getMockProducers();\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener ubicaciones\r\n * @returns {Promise<Array>} - Lista de ubicaciones\r\n */\r\nexport const getLocations = async () => {\r\n  try {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      return getMockLocations();\r\n    }\r\n    return await apiRequest('/ubicaciones');\r\n  } catch (error) {\r\n    console.warn('API no disponible, usando datos mock:', error);\r\n    return getMockLocations();\r\n  }\r\n};\r\n\r\n/**\r\n * Filtrar productos\r\n * @param {Object} filters - Filtros aplicados\r\n * @returns {Promise<Array>} - Lista de productos filtrados\r\n */\r\nexport const filterProducts = async (filters) => {\r\n  try {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      return getFilteredMockProducts(filters);\r\n    }\r\n    \r\n    const params = new URLSearchParams();\r\n    \r\n    if (filters.category && filters.category !== '') {\r\n      params.append('categoria', filters.category);\r\n    }\r\n    if (filters.producer && filters.producer !== '') {\r\n      params.append('productor', filters.producer);\r\n    }\r\n    if (filters.location && filters.location !== '') {\r\n      params.append('ubicacion', filters.location);\r\n    }\r\n    if (filters.priceMin) {\r\n      params.append('precioMin', filters.priceMin);\r\n    }\r\n    if (filters.priceMax) {\r\n      params.append('precioMax', filters.priceMax);\r\n    }\r\n    \r\n    return await apiRequest(`/productos/filtrar?${params.toString()}`);\r\n  } catch (error) {\r\n    console.warn('API no disponible, usando datos mock filtrados:', error);\r\n    return getFilteredMockProducts(filters);\r\n  }\r\n};\r\n\r\n// Datos mock para desarrollo\r\nconst getMockProducts = () => {\r\n  return [\r\n    {\r\n      id: 1,\r\n      name: 'Manzanas Rojas Orgánicas',\r\n      description: 'Manzanas frescas y jugosas cultivadas sin químicos en las montañas de Boyacá',\r\n      price: 15.99,\r\n      producer: 'Finca Los Manzanos',\r\n      category: 'Frutas',\r\n      location: 'Boyacá',\r\n      image: '/images/manzanas.jpg'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Queso Campesino Artesanal',\r\n      description: 'Queso fresco elaborado con leche de vacas alimentadas con pasto natural',\r\n      price: 25.50,\r\n      producer: 'Lácteos San José',\r\n      category: 'Lácteos',\r\n      location: 'Cundinamarca',\r\n      image: '/images/queso.jpg'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Café Orgánico de Altura',\r\n      description: 'Café premium cultivado a más de 1800 metros sobre el nivel del mar',\r\n      price: 35.00,\r\n      producer: 'Café de las Montañas',\r\n      category: 'Bebidas',\r\n      location: 'Huila',\r\n      image: '/images/cafe.jpg'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Tomates Cherry Hidropónicos',\r\n      description: 'Tomates cherry dulces y jugosos cultivados en invernaderos tecnificados',\r\n      price: 8.99,\r\n      producer: 'Huerta Verde',\r\n      category: 'Verduras',\r\n      location: 'Antioquia',\r\n      image: '/images/tomates.jpg'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Miel de Abeja Pura',\r\n      description: 'Miel 100% natural de flores silvestres, sin procesar ni pasteurizar',\r\n      price: 18.75,\r\n      producer: 'Apiario El Roble',\r\n      category: 'Endulzantes',\r\n      location: 'Santander',\r\n      image: '/images/miel.jpg'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Aguacate Hass Premium',\r\n      description: 'Aguacates de exportación con la mejor calidad y sabor',\r\n      price: 12.50,\r\n      producer: 'Finca Verde Esperanza',\r\n      category: 'Frutas',\r\n      location: 'Caldas',\r\n      image: '/images/aguacate.jpg'\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'Panela Pulverizada',\r\n      description: 'Endulzante natural obtenido de la caña de azúcar orgánica',\r\n      price: 6.99,\r\n      producer: 'Trapiche Don Pedro',\r\n      category: 'Endulzantes',\r\n      location: 'Valle del Cauca',\r\n      image: '/images/panela.jpg'\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'Lechuga Hidropónica',\r\n      description: 'Lechuga fresca cultivada en sistemas hidropónicos controlados',\r\n      price: 4.50,\r\n      producer: 'Huerta Verde',\r\n      category: 'Verduras',\r\n      location: 'Antioquia',\r\n      image: '/images/lechuga.jpg'\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'Yogurt Natural Casero',\r\n      description: 'Yogurt artesanal sin conservantes ni colorantes artificiales',\r\n      price: 8.99,\r\n      producer: 'Lácteos San José',\r\n      category: 'Lácteos',\r\n      location: 'Cundinamarca',\r\n      image: '/images/yogurt.jpg'\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'Plátano Hartón',\r\n      description: 'Plátanos verdes ideales para cocinar, frescos y de gran tamaño',\r\n      price: 3.99,\r\n      producer: 'Finca La Esperanza',\r\n      category: 'Frutas',\r\n      location: 'Quindío',\r\n      image: '/images/platano.jpg'\r\n    }\r\n  ];\r\n};\r\n\r\nconst getMockCategories = () => {\r\n  return [\r\n    { id: 1, name: 'Frutas' },\r\n    { id: 2, name: 'Verduras' },\r\n    { id: 3, name: 'Lácteos' },\r\n    { id: 4, name: 'Bebidas' },\r\n    { id: 5, name: 'Endulzantes' },\r\n    { id: 6, name: 'Granos' },\r\n    { id: 7, name: 'Carnes' },\r\n    { id: 8, name: 'Artesanías' }\r\n  ];\r\n};\r\n\r\nconst getMockProducers = () => {\r\n  return [\r\n    { id: 1, name: 'Finca Los Manzanos' },\r\n    { id: 2, name: 'Lácteos San José' },\r\n    { id: 3, name: 'Café de las Montañas' },\r\n    { id: 4, name: 'Huerta Verde' },\r\n    { id: 5, name: 'Apiario El Roble' },\r\n    { id: 6, name: 'Finca Verde Esperanza' },\r\n    { id: 7, name: 'Trapiche Don Pedro' },\r\n    { id: 8, name: 'Finca La Esperanza' }\r\n  ];\r\n};\r\n\r\nconst getMockLocations = () => {\r\n  return [\r\n    { id: 1, name: 'Boyacá' },\r\n    { id: 2, name: 'Cundinamarca' },\r\n    { id: 3, name: 'Huila' },\r\n    { id: 4, name: 'Antioquia' },\r\n    { id: 5, name: 'Santander' },\r\n    { id: 6, name: 'Caldas' },\r\n    { id: 7, name: 'Valle del Cauca' },\r\n    { id: 8, name: 'Quindío' }\r\n  ];\r\n};\r\n\r\nconst getFilteredMockProducts = (filters) => {\r\n  const products = getMockProducts();\r\n  \r\n  return products.filter(product => {\r\n    // Filtro por búsqueda\r\n    if (filters.search) {\r\n      const searchTerm = filters.search.toLowerCase();\r\n      if (!product.name.toLowerCase().includes(searchTerm) && \r\n          !product.description.toLowerCase().includes(searchTerm)) {\r\n        return false;\r\n      }\r\n    }\r\n    \r\n    // Filtro por categoría\r\n    if (filters.category && filters.category !== '') {\r\n      if (product.category !== filters.category) return false;\r\n    }\r\n    \r\n    // Filtro por productor\r\n    if (filters.producer && filters.producer !== '') {\r\n      if (product.producer !== filters.producer) return false;\r\n    }\r\n    \r\n    // Filtro por ubicación\r\n    if (filters.location && filters.location !== '') {\r\n      if (product.location !== filters.location) return false;\r\n    }\r\n    \r\n    // Filtro por precio mínimo\r\n    if (filters.priceMin) {\r\n      if (product.price < parseFloat(filters.priceMin)) return false;\r\n    }\r\n    \r\n    // Filtro por precio máximo\r\n    if (filters.priceMax) {\r\n      if (product.price > parseFloat(filters.priceMax)) return false;\r\n    }\r\n    \r\n    return true;\r\n  });\r\n};\r\n\r\n/**\r\n * Crear un nuevo producto (solo admin)\r\n * @param {Object} productData - Datos del producto\r\n * @returns {Promise<Object>} - Producto creado\r\n */\r\nexport const createProduct = async (productData) => {\r\n  return await apiRequest('/productos', {\r\n    method: 'POST',\r\n    body: JSON.stringify(productData)\r\n  });\r\n};\r\n\r\n/**\r\n * Actualizar un producto (solo admin)\r\n * @param {number} id - ID del producto\r\n * @param {Object} productData - Datos actualizados\r\n * @returns {Promise<Object>} - Producto actualizado\r\n */\r\nexport const updateProduct = async (id, productData) => {\r\n  return await apiRequest(`/productos/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(productData)\r\n  });\r\n};\r\n\r\n/**\r\n * Eliminar un producto (solo admin)\r\n * @param {number} id - ID del producto\r\n * @returns {Promise<Object>} - Confirmación de eliminación\r\n */\r\nexport const deleteProduct = async (id) => {\r\n  return await apiRequest(`/productos/${id}`, {\r\n    method: 'DELETE'\r\n  });\r\n};\r\n\r\n/**\r\n * Autenticar usuario\r\n * @param {Object} credentials - Credenciales de login\r\n * @returns {Promise<Object>} - Datos del usuario autenticado\r\n */\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    return await apiRequest('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify(credentials)\r\n    });\r\n  } catch (error) {\r\n    // Simulación para desarrollo\r\n    if (credentials.email === 'admin@canasta.com' && credentials.password === 'admin123') {\r\n      return {\r\n        success: true,\r\n        user: {\r\n          id: 1,\r\n          name: 'Administrador',\r\n          email: 'admin@canasta.com',\r\n          role: 'admin'\r\n        }\r\n      };\r\n    } else if (credentials.email === 'usuario@canasta.com' && credentials.password === 'user123') {\r\n      return {\r\n        success: true,\r\n        user: {\r\n          id: 2,\r\n          name: 'Usuario Demo',\r\n          email: 'usuario@canasta.com',\r\n          role: 'user'\r\n        }\r\n      };\r\n    } else {\r\n      throw new Error('Credenciales incorrectas');\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Registrar nuevo usuario\r\n * @param {Object} userData - Datos del nuevo usuario\r\n * @returns {Promise<Object>} - Usuario registrado\r\n */\r\nexport const registerUser = async (userData) => {\r\n  return await apiRequest('/auth/register', {\r\n    method: 'POST',\r\n    body: JSON.stringify(userData)\r\n  });\r\n};\r\n\r\n/**\r\n * Crear pedido\r\n * @param {Object} orderData - Datos del pedido\r\n * @returns {Promise<Object>} - Pedido creado\r\n */\r\nexport const createOrder = async (orderData) => {\r\n  return await apiRequest('/pedidos', {\r\n    method: 'POST',\r\n    body: JSON.stringify(orderData)\r\n  });\r\n};\r\n\r\n/**\r\n * Obtener pedidos del usuario\r\n * @param {number} userId - ID del usuario\r\n * @returns {Promise<Array>} - Lista de pedidos\r\n */\r\nexport const getUserOrders = async (userId) => {\r\n  return await apiRequest(`/pedidos/usuario/${userId}`);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}