{"ast":null,"code":"// frontend/src/services/api.js - Reemplazar completamente\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\n\n/**\r\n * Función helper para realizar peticiones HTTP\r\n */\nconst apiRequest = async (endpoint, options = {}) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers\n    },\n    ...options\n  };\n  try {\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n\n    // Si la respuesta tiene estructura {success: true, data: {...}}\n    if (data.success && data.data) {\n      return data.data;\n    }\n\n    // Si la respuesta es directamente un array o objeto\n    return data;\n  } catch (error) {\n    console.error('API Request Error:', error);\n\n    // Si hay error, devolver datos mock como fallback\n    console.warn('Usando datos mock como fallback');\n    return getMockDataForEndpoint(endpoint);\n  }\n};\n\n/**\r\n * Obtener todos los productos desde el backend real\r\n */\nexport const getProducts = async () => {\n  try {\n    const products = await apiRequest('/products');\n    console.log('Productos obtenidos del backend:', products);\n    return Array.isArray(products) ? products : products.products || [];\n  } catch (error) {\n    console.error('Error al obtener productos del backend:', error);\n    return getMockProducts();\n  }\n};\n\n/**\r\n * Obtener categorías desde el backend real\r\n */\nexport const getCategories = async () => {\n  try {\n    const categories = await apiRequest('/categories');\n    console.log('Categorías obtenidas del backend:', categories);\n    return Array.isArray(categories) ? categories : categories.categories || [];\n  } catch (error) {\n    console.error('Error al obtener categorías del backend:', error);\n    return getMockCategories();\n  }\n};\n\n/**\r\n * Obtener productores desde el backend real\r\n */\nexport const getProducers = async () => {\n  try {\n    const producers = await apiRequest('/producers');\n    console.log('Productores obtenidos del backend:', producers);\n    return Array.isArray(producers) ? producers : producers.producers || [];\n  } catch (error) {\n    console.error('Error al obtener productores del backend:', error);\n    return getMockProducers();\n  }\n};\n\n/**\r\n * Obtener ubicaciones desde el backend real\r\n */\nexport const getLocations = async () => {\n  try {\n    const locations = await apiRequest('/locations');\n    console.log('Ubicaciones obtenidas del backend:', locations);\n    return Array.isArray(locations) ? locations : locations.locations || [];\n  } catch (error) {\n    console.error('Error al obtener ubicaciones del backend:', error);\n    return getMockLocations();\n  }\n};\n\n/**\r\n * Filtrar productos con parámetros corregidos\r\n */\nexport const filterProducts = async filters => {\n  try {\n    const params = new URLSearchParams();\n    console.log('Filtros enviados desde frontend:', filters);\n\n    // Filtro por categoría (enviar nombre)\n    if (filters.category && filters.category !== '') {\n      params.append('category', filters.category);\n    }\n\n    // Filtro por productor (enviar nombre)\n    if (filters.producer && filters.producer !== '') {\n      params.append('producer', filters.producer);\n    }\n\n    // Filtro por ubicación (enviar formato \"ciudad, departamento\")\n    if (filters.location && filters.location !== '') {\n      params.append('location', filters.location);\n    }\n\n    // Filtros de precio\n    if (filters.priceMin && filters.priceMin !== '') {\n      params.append('priceMin', filters.priceMin);\n    }\n    if (filters.priceMax && filters.priceMax !== '') {\n      params.append('priceMax', filters.priceMax);\n    }\n\n    // Filtro de búsqueda\n    if (filters.search && filters.search !== '') {\n      params.append('search', filters.search);\n    }\n    const url = `/products?${params.toString()}`;\n    console.log('URL de filtrado:', `${API_BASE_URL}${url}`);\n    const products = await apiRequest(url);\n    console.log('Productos filtrados recibidos:', products);\n    return Array.isArray(products) ? products : products.products || [];\n  } catch (error) {\n    console.error('Error al filtrar productos del backend:', error);\n    return [];\n  }\n};\n\n/**\r\n * Autenticar usuario con el backend real\r\n */\nexport const loginUser = async credentials => {\n  try {\n    const response = await apiRequest('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n    console.log('Login response del backend:', response);\n    if (response.success || response.user) {\n      return {\n        success: true,\n        user: response.user || response.data.user,\n        token: response.token || response.data.token\n      };\n    }\n    throw new Error(response.message || 'Error en el login');\n  } catch (error) {\n    console.error('Error en login del backend:', error);\n\n    // Fallback a simulación para desarrollo\n    if (credentials.email === 'admin@canasta.com' && credentials.password === 'admin123') {\n      return {\n        success: true,\n        user: {\n          id: 1,\n          name: 'Administrador',\n          email: 'admin@canasta.com',\n          role: 'admin'\n        }\n      };\n    } else if (credentials.email === 'usuario@canasta.com' && credentials.password === 'user123') {\n      return {\n        success: true,\n        user: {\n          id: 2,\n          name: 'Usuario Demo',\n          email: 'usuario@canasta.com',\n          role: 'user'\n        }\n      };\n    } else {\n      throw new Error('Credenciales incorrectas');\n    }\n  }\n};\n\n// Funciones de fallback con datos mock (mantener como respaldo)\nconst getMockDataForEndpoint = endpoint => {\n  if (endpoint.includes('/products')) return getMockProducts();\n  if (endpoint.includes('/categories')) return getMockCategories();\n  if (endpoint.includes('/producers')) return getMockProducers();\n  if (endpoint.includes('/locations')) return getMockLocations();\n  return [];\n};\nconst getMockProducts = () => {\n  return [{\n    _id: '1',\n    name: 'Manzanas Rojas Orgánicas (MOCK)',\n    description: 'Datos de prueba - Backend no conectado',\n    price: 15.99,\n    producer: {\n      name: 'Finca Los Manzanos'\n    },\n    category: {\n      name: 'Frutas'\n    },\n    images: [{\n      url: '/images/manzanas.jpg',\n      isPrimary: true\n    }],\n    stock: 100,\n    unit: 'kg',\n    isOrganic: true,\n    isAvailable: true\n  }];\n};\nconst getMockCategories = () => {\n  return [{\n    _id: '1',\n    name: 'Frutas'\n  }, {\n    _id: '2',\n    name: 'Verduras'\n  }, {\n    _id: '3',\n    name: 'Lácteos'\n  }];\n};\nconst getMockProducers = () => {\n  return [{\n    _id: '1',\n    name: 'Finca Los Manzanos'\n  }, {\n    _id: '2',\n    name: 'Lácteos San José'\n  }];\n};\nconst getMockLocations = () => {\n  return [{\n    _id: '1',\n    city: 'Boyacá',\n    department: 'Boyacá'\n  }, {\n    _id: '2',\n    city: 'Bogotá',\n    department: 'Cundinamarca'\n  }];\n};\nconst getFilteredMockProducts = filters => {\n  return getMockProducts();\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","apiRequest","endpoint","options","url","config","headers","response","fetch","ok","Error","status","data","json","success","error","console","warn","getMockDataForEndpoint","getProducts","products","log","Array","isArray","getMockProducts","getCategories","categories","getMockCategories","getProducers","producers","getMockProducers","getLocations","locations","getMockLocations","filterProducts","filters","params","URLSearchParams","category","append","producer","location","priceMin","priceMax","search","toString","loginUser","credentials","method","body","JSON","stringify","user","token","message","email","password","id","name","role","includes","_id","description","price","images","isPrimary","stock","unit","isOrganic","isAvailable","city","department","getFilteredMockProducts"],"sources":["C:/Users/Bedoya/Desktop/Programming learning/Canasta Campesina/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js - Reemplazar completamente\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\r\n\r\n/**\r\n * Función helper para realizar peticiones HTTP\r\n */\r\nconst apiRequest = async (endpoint, options = {}) => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  \r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...options.headers,\r\n    },\r\n    ...options,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, config);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Si la respuesta tiene estructura {success: true, data: {...}}\r\n    if (data.success && data.data) {\r\n      return data.data;\r\n    }\r\n    \r\n    // Si la respuesta es directamente un array o objeto\r\n    return data;\r\n    \r\n  } catch (error) {\r\n    console.error('API Request Error:', error);\r\n    \r\n    // Si hay error, devolver datos mock como fallback\r\n    console.warn('Usando datos mock como fallback');\r\n    return getMockDataForEndpoint(endpoint);\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener todos los productos desde el backend real\r\n */\r\nexport const getProducts = async () => {\r\n  try {\r\n    const products = await apiRequest('/products');\r\n    console.log('Productos obtenidos del backend:', products);\r\n    return Array.isArray(products) ? products : products.products || [];\r\n  } catch (error) {\r\n    console.error('Error al obtener productos del backend:', error);\r\n    return getMockProducts();\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener categorías desde el backend real\r\n */\r\nexport const getCategories = async () => {\r\n  try {\r\n    const categories = await apiRequest('/categories');\r\n    console.log('Categorías obtenidas del backend:', categories);\r\n    return Array.isArray(categories) ? categories : categories.categories || [];\r\n  } catch (error) {\r\n    console.error('Error al obtener categorías del backend:', error);\r\n    return getMockCategories();\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener productores desde el backend real\r\n */\r\nexport const getProducers = async () => {\r\n  try {\r\n    const producers = await apiRequest('/producers');\r\n    console.log('Productores obtenidos del backend:', producers);\r\n    return Array.isArray(producers) ? producers : producers.producers || [];\r\n  } catch (error) {\r\n    console.error('Error al obtener productores del backend:', error);\r\n    return getMockProducers();\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener ubicaciones desde el backend real\r\n */\r\nexport const getLocations = async () => {\r\n  try {\r\n    const locations = await apiRequest('/locations');\r\n    console.log('Ubicaciones obtenidas del backend:', locations);\r\n    return Array.isArray(locations) ? locations : locations.locations || [];\r\n  } catch (error) {\r\n    console.error('Error al obtener ubicaciones del backend:', error);\r\n    return getMockLocations();\r\n  }\r\n};\r\n\r\n/**\r\n * Filtrar productos con parámetros corregidos\r\n */\r\nexport const filterProducts = async (filters) => {\r\n  try {\r\n    const params = new URLSearchParams();\r\n    \r\n    console.log('Filtros enviados desde frontend:', filters);\r\n    \r\n    // Filtro por categoría (enviar nombre)\r\n    if (filters.category && filters.category !== '') {\r\n      params.append('category', filters.category);\r\n    }\r\n    \r\n    // Filtro por productor (enviar nombre)\r\n    if (filters.producer && filters.producer !== '') {\r\n      params.append('producer', filters.producer);\r\n    }\r\n    \r\n    // Filtro por ubicación (enviar formato \"ciudad, departamento\")\r\n    if (filters.location && filters.location !== '') {\r\n      params.append('location', filters.location);\r\n    }\r\n    \r\n    // Filtros de precio\r\n    if (filters.priceMin && filters.priceMin !== '') {\r\n      params.append('priceMin', filters.priceMin);\r\n    }\r\n    if (filters.priceMax && filters.priceMax !== '') {\r\n      params.append('priceMax', filters.priceMax);\r\n    }\r\n    \r\n    // Filtro de búsqueda\r\n    if (filters.search && filters.search !== '') {\r\n      params.append('search', filters.search);\r\n    }\r\n\r\n    const url = `/products?${params.toString()}`;\r\n    console.log('URL de filtrado:', `${API_BASE_URL}${url}`);\r\n    \r\n    const products = await apiRequest(url);\r\n    console.log('Productos filtrados recibidos:', products);\r\n    \r\n    return Array.isArray(products) ? products : products.products || [];\r\n  } catch (error) {\r\n    console.error('Error al filtrar productos del backend:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Autenticar usuario con el backend real\r\n */\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await apiRequest('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify(credentials)\r\n    });\r\n    \r\n    console.log('Login response del backend:', response);\r\n    \r\n    if (response.success || response.user) {\r\n      return {\r\n        success: true,\r\n        user: response.user || response.data.user,\r\n        token: response.token || response.data.token\r\n      };\r\n    }\r\n    \r\n    throw new Error(response.message || 'Error en el login');\r\n    \r\n  } catch (error) {\r\n    console.error('Error en login del backend:', error);\r\n    \r\n    // Fallback a simulación para desarrollo\r\n    if (credentials.email === 'admin@canasta.com' && credentials.password === 'admin123') {\r\n      return {\r\n        success: true,\r\n        user: {\r\n          id: 1,\r\n          name: 'Administrador',\r\n          email: 'admin@canasta.com',\r\n          role: 'admin'\r\n        }\r\n      };\r\n    } else if (credentials.email === 'usuario@canasta.com' && credentials.password === 'user123') {\r\n      return {\r\n        success: true,\r\n        user: {\r\n          id: 2,\r\n          name: 'Usuario Demo',\r\n          email: 'usuario@canasta.com',\r\n          role: 'user'\r\n        }\r\n      };\r\n    } else {\r\n      throw new Error('Credenciales incorrectas');\r\n    }\r\n  }\r\n};\r\n\r\n// Funciones de fallback con datos mock (mantener como respaldo)\r\nconst getMockDataForEndpoint = (endpoint) => {\r\n  if (endpoint.includes('/products')) return getMockProducts();\r\n  if (endpoint.includes('/categories')) return getMockCategories();\r\n  if (endpoint.includes('/producers')) return getMockProducers();\r\n  if (endpoint.includes('/locations')) return getMockLocations();\r\n  return [];\r\n};\r\n\r\nconst getMockProducts = () => {\r\n  return [\r\n    {\r\n      _id: '1',\r\n      name: 'Manzanas Rojas Orgánicas (MOCK)',\r\n      description: 'Datos de prueba - Backend no conectado',\r\n      price: 15.99,\r\n      producer: { name: 'Finca Los Manzanos' },\r\n      category: { name: 'Frutas' },\r\n      images: [{ url: '/images/manzanas.jpg', isPrimary: true }],\r\n      stock: 100,\r\n      unit: 'kg',\r\n      isOrganic: true,\r\n      isAvailable: true\r\n    }\r\n  ];\r\n};\r\n\r\nconst getMockCategories = () => {\r\n  return [\r\n    { _id: '1', name: 'Frutas' },\r\n    { _id: '2', name: 'Verduras' },\r\n    { _id: '3', name: 'Lácteos' }\r\n  ];\r\n};\r\n\r\nconst getMockProducers = () => {\r\n  return [\r\n    { _id: '1', name: 'Finca Los Manzanos' },\r\n    { _id: '2', name: 'Lácteos San José' }\r\n  ];\r\n};\r\n\r\nconst getMockLocations = () => {\r\n  return [\r\n    { _id: '1', city: 'Boyacá', department: 'Boyacá' },\r\n    { _id: '2', city: 'Bogotá', department: 'Cundinamarca' }\r\n  ];\r\n};\r\n\r\nconst getFilteredMockProducts = (filters) => {\r\n  return getMockProducts();\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}