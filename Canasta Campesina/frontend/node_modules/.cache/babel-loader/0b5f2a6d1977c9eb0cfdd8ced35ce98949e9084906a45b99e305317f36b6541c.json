{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bedoya\\\\Desktop\\\\Programming learning\\\\Canasta Campesina\\\\frontend\\\\src\\\\context\\\\CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/context/CartContext.jsx\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n\n  /**\r\n   * Agregar producto al carrito\r\n   * Si el producto ya existe, incrementar la cantidad\r\n   * Si no existe, agregar como nuevo producto con cantidad 1\r\n   */\n  const addToCart = product => {\n    setCartItems(prevItems => {\n      // Buscar si el producto ya existe en el carrito\n      const existingProductIndex = prevItems.findIndex(item => item._id === product._id);\n      if (existingProductIndex !== -1) {\n        // Si existe, incrementar cantidad\n        const updatedItems = [...prevItems];\n        updatedItems[existingProductIndex] = {\n          ...updatedItems[existingProductIndex],\n          quantity: updatedItems[existingProductIndex].quantity + 1\n        };\n        return updatedItems;\n      } else {\n        // Si no existe, agregar como nuevo producto\n        return [...prevItems, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n  };\n\n  /**\r\n   * Remover producto del carrito\r\n   */\n  const removeFromCart = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item._id !== productId));\n  };\n\n  /**\r\n   * Actualizar cantidad de un producto específico\r\n   */\n  const updateQuantity = (productId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item._id === productId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n\n  /**\r\n   * Limpiar carrito\r\n   */\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  /**\r\n   * Calcular total del carrito\r\n   */\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  /**\r\n   * Obtener cantidad total de items\r\n   */\n  const getCartItemsCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getCartItemsCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart debe ser usado dentro de CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","addToCart","product","prevItems","existingProductIndex","findIndex","item","_id","updatedItems","quantity","removeFromCart","productId","filter","updateQuantity","newQuantity","map","clearCart","getCartTotal","reduce","total","price","getCartItemsCount","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Bedoya/Desktop/Programming learning/Canasta Campesina/frontend/src/context/CartContext.jsx"],"sourcesContent":["// frontend/src/context/CartContext.jsx\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  /**\r\n   * Agregar producto al carrito\r\n   * Si el producto ya existe, incrementar la cantidad\r\n   * Si no existe, agregar como nuevo producto con cantidad 1\r\n   */\r\n  const addToCart = (product) => {\r\n    setCartItems((prevItems) => {\r\n      // Buscar si el producto ya existe en el carrito\r\n      const existingProductIndex = prevItems.findIndex(item => item._id === product._id);\r\n      \r\n      if (existingProductIndex !== -1) {\r\n        // Si existe, incrementar cantidad\r\n        const updatedItems = [...prevItems];\r\n        updatedItems[existingProductIndex] = {\r\n          ...updatedItems[existingProductIndex],\r\n          quantity: updatedItems[existingProductIndex].quantity + 1\r\n        };\r\n        return updatedItems;\r\n      } else {\r\n        // Si no existe, agregar como nuevo producto\r\n        return [...prevItems, { ...product, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Remover producto del carrito\r\n   */\r\n  const removeFromCart = (productId) => {\r\n    setCartItems((prevItems) => prevItems.filter(item => item._id !== productId));\r\n  };\r\n\r\n  /**\r\n   * Actualizar cantidad de un producto específico\r\n   */\r\n  const updateQuantity = (productId, newQuantity) => {\r\n    if (newQuantity <= 0) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n\r\n    setCartItems((prevItems) =>\r\n      prevItems.map(item =>\r\n        item._id === productId\r\n          ? { ...item, quantity: newQuantity }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Limpiar carrito\r\n   */\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  /**\r\n   * Calcular total del carrito\r\n   */\r\n  const getCartTotal = () => {\r\n    return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n  };\r\n\r\n  /**\r\n   * Obtener cantidad total de items\r\n   */\r\n  const getCartItemsCount = () => {\r\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  const value = {\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getCartTotal,\r\n    getCartItemsCount\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart debe ser usado dentro de CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default CartContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}