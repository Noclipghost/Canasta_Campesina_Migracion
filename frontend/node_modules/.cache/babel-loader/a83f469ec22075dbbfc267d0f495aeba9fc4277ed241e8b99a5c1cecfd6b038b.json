{"ast":null,"code":"// frontend/src/services/api.js\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\n\n/**\r\n * Función helper para realizar peticiones HTTP con autenticación\r\n */\nconst apiRequest = async (endpoint, options = {}) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n\n  // Obtener token de autenticación\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...(token && {\n        Authorization: `Bearer ${token}`\n      }),\n      ...options.headers\n    },\n    ...options\n  };\n  try {\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n\n    // Si la respuesta tiene estructura {success: true, data: {...}}\n    if (data.success && data.data) {\n      return data.data;\n    }\n\n    // Si la respuesta es directamente un array o objeto\n    return data;\n  } catch (error) {\n    console.error('API Request Error:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Función helper para peticiones con FormData (archivos)\r\n */\nconst apiRequestFormData = async (endpoint, formData, method = 'POST') => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const token = localStorage.getItem('token');\n  try {\n    const response = await fetch(url, {\n      method,\n      headers: {\n        ...(token && {\n          Authorization: `Bearer ${token}`\n        })\n      },\n      body: formData\n    });\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data.data || data;\n  } catch (error) {\n    console.error('API FormData Request Error:', error);\n    throw error;\n  }\n};\n\n// ========== PRODUCTOS ==========\n\n/**\r\n * Obtener todos los productos\r\n */\nexport const getProducts = async () => {\n  try {\n    const products = await apiRequest('/products');\n    console.log('Productos obtenidos del backend:', products);\n    return Array.isArray(products) ? products : products.products || [];\n  } catch (error) {\n    console.error('Error al obtener productos del backend:', error);\n    return getMockProducts();\n  }\n};\n\n/**\r\n * Obtener producto por ID\r\n */\nexport const getProductById = async id => {\n  try {\n    const product = await apiRequest(`/products/${id}`);\n    return product.product || product;\n  } catch (error) {\n    console.error('Error al obtener producto:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Crear nuevo producto\r\n */\nexport const createProduct = async productData => {\n  try {\n    const formData = new FormData();\n\n    // Agregar campos del producto\n    Object.keys(productData).forEach(key => {\n      if (key !== 'images') {\n        if (Array.isArray(productData[key])) {\n          formData.append(key, JSON.stringify(productData[key]));\n        } else {\n          formData.append(key, productData[key]);\n        }\n      }\n    });\n\n    // Agregar imágenes si existen\n    if (productData.images && productData.images.length > 0) {\n      productData.images.forEach(image => {\n        formData.append('images', image);\n      });\n    }\n    const response = await apiRequestFormData('/products', formData, 'POST');\n    return response.product || response;\n  } catch (error) {\n    console.error('Error al crear producto:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Actualizar producto\r\n */\nexport const updateProduct = async (id, productData) => {\n  try {\n    const formData = new FormData();\n    Object.keys(productData).forEach(key => {\n      if (key !== 'images') {\n        if (Array.isArray(productData[key])) {\n          formData.append(key, JSON.stringify(productData[key]));\n        } else {\n          formData.append(key, productData[key]);\n        }\n      }\n    });\n    if (productData.images && productData.images.length > 0) {\n      productData.images.forEach(image => {\n        formData.append('images', image);\n      });\n    }\n    const response = await apiRequestFormData(`/products/${id}`, formData, 'PUT');\n    return response.product || response;\n  } catch (error) {\n    console.error('Error al actualizar producto:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Eliminar producto\r\n */\nexport const deleteProduct = async id => {\n  try {\n    await apiRequest(`/products/${id}`, {\n      method: 'DELETE'\n    });\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar producto:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Filtrar productos\r\n */\nexport const filterProducts = async filters => {\n  try {\n    const params = new URLSearchParams();\n    console.log('Filtros enviados desde frontend:', filters);\n    if (filters.category && filters.category !== '') {\n      params.append('category', filters.category);\n    }\n    if (filters.producer && filters.producer !== '') {\n      params.append('producer', filters.producer);\n    }\n    if (filters.location && filters.location !== '') {\n      params.append('location', filters.location);\n    }\n    if (filters.priceMin && filters.priceMin !== '') {\n      params.append('priceMin', filters.priceMin);\n    }\n    if (filters.priceMax && filters.priceMax !== '') {\n      params.append('priceMax', filters.priceMax);\n    }\n    if (filters.search && filters.search !== '') {\n      params.append('search', filters.search);\n    }\n    const url = `/products?${params.toString()}`;\n    console.log('URL de filtrado:', `${API_BASE_URL}${url}`);\n    const products = await apiRequest(url);\n    console.log('Productos filtrados recibidos:', products);\n    return Array.isArray(products) ? products : products.products || [];\n  } catch (error) {\n    console.error('Error al filtrar productos del backend:', error);\n    return [];\n  }\n};\n\n// ========== CATEGORÍAS ==========\n\n/**\r\n * Obtener todas las categorías\r\n */\nexport const getCategories = async () => {\n  try {\n    const categories = await apiRequest('/categories');\n    console.log('Categorías obtenidas del backend:', categories);\n    return Array.isArray(categories) ? categories : categories.categories || [];\n  } catch (error) {\n    console.error('Error al obtener categorías del backend:', error);\n    return getMockCategories();\n  }\n};\n\n/**\r\n * Obtener categoría por ID\r\n */\nexport const getCategoryById = async id => {\n  try {\n    const category = await apiRequest(`/categories/${id}`);\n    return category.category || category;\n  } catch (error) {\n    console.error('Error al obtener categoría:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Crear nueva categoría\r\n */\nexport const createCategory = async categoryData => {\n  try {\n    const category = await apiRequest('/categories', {\n      method: 'POST',\n      body: JSON.stringify(categoryData)\n    });\n    return category.category || category;\n  } catch (error) {\n    console.error('Error al crear categoría:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Actualizar categoría\r\n */\nexport const updateCategory = async (id, categoryData) => {\n  try {\n    const category = await apiRequest(`/categories/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(categoryData)\n    });\n    return category.category || category;\n  } catch (error) {\n    console.error('Error al actualizar categoría:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Eliminar categoría\r\n */\nexport const deleteCategory = async id => {\n  try {\n    await apiRequest(`/categories/${id}`, {\n      method: 'DELETE'\n    });\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar categoría:', error);\n    throw error;\n  }\n};\n\n// ========== PRODUCTORES ==========\n\n/**\r\n * Obtener todos los productores\r\n */\nexport const getProducers = async () => {\n  try {\n    const producers = await apiRequest('/producers');\n    console.log('Productores obtenidos del backend:', producers);\n    return Array.isArray(producers) ? producers : producers.producers || [];\n  } catch (error) {\n    console.error('Error al obtener productores del backend:', error);\n    return getMockProducers();\n  }\n};\n\n/**\r\n * Obtener productor por ID\r\n */\nexport const getProducerById = async id => {\n  try {\n    const producer = await apiRequest(`/producers/${id}`);\n    return producer.producer || producer;\n  } catch (error) {\n    console.error('Error al obtener productor:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Crear nuevo productor\r\n */\nexport const createProducer = async producerData => {\n  try {\n    const formData = new FormData();\n    Object.keys(producerData).forEach(key => {\n      if (key !== 'avatar') {\n        if (Array.isArray(producerData[key])) {\n          formData.append(key, JSON.stringify(producerData[key]));\n        } else {\n          formData.append(key, producerData[key]);\n        }\n      }\n    });\n    if (producerData.avatar) {\n      formData.append('avatar', producerData.avatar);\n    }\n    const response = await apiRequestFormData('/producers', formData, 'POST');\n    return response.producer || response;\n  } catch (error) {\n    console.error('Error al crear productor:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Actualizar productor\r\n */\nexport const updateProducer = async (id, producerData) => {\n  try {\n    const formData = new FormData();\n    Object.keys(producerData).forEach(key => {\n      if (key !== 'avatar') {\n        if (Array.isArray(producerData[key])) {\n          formData.append(key, JSON.stringify(producerData[key]));\n        } else {\n          formData.append(key, producerData[key]);\n        }\n      }\n    });\n    if (producerData.avatar) {\n      formData.append('avatar', producerData.avatar);\n    }\n    const response = await apiRequestFormData(`/producers/${id}`, formData, 'PUT');\n    return response.producer || response;\n  } catch (error) {\n    console.error('Error al actualizar productor:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Eliminar productor\r\n */\nexport const deleteProducer = async id => {\n  try {\n    await apiRequest(`/producers/${id}`, {\n      method: 'DELETE'\n    });\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar productor:', error);\n    throw error;\n  }\n};\n\n// ========== UBICACIONES ==========\n\n/**\r\n * Obtener todas las ubicaciones\r\n */\nexport const getLocations = async () => {\n  try {\n    const locations = await apiRequest('/locations');\n    console.log('Ubicaciones obtenidas del backend:', locations);\n    return Array.isArray(locations) ? locations : locations.locations || [];\n  } catch (error) {\n    console.error('Error al obtener ubicaciones del backend:', error);\n    return getMockLocations();\n  }\n};\n\n/**\r\n * Obtener ubicación por ID\r\n */\nexport const getLocationById = async id => {\n  try {\n    const location = await apiRequest(`/locations/${id}`);\n    return location.location || location;\n  } catch (error) {\n    console.error('Error al obtener ubicación:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Crear nueva ubicación\r\n */\nexport const createLocation = async locationData => {\n  try {\n    const location = await apiRequest('/locations', {\n      method: 'POST',\n      body: JSON.stringify(locationData)\n    });\n    return location.location || location;\n  } catch (error) {\n    console.error('Error al crear ubicación:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Actualizar ubicación\r\n */\nexport const updateLocation = async (id, locationData) => {\n  try {\n    const location = await apiRequest(`/locations/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(locationData)\n    });\n    return location.location || location;\n  } catch (error) {\n    console.error('Error al actualizar ubicación:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Eliminar ubicación\r\n */\nexport const deleteLocation = async id => {\n  try {\n    await apiRequest(`/locations/${id}`, {\n      method: 'DELETE'\n    });\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar ubicación:', error);\n    throw error;\n  }\n};\n\n// ========== USUARIOS ==========\n\n/**\r\n * Obtener todos los usuarios\r\n */\nexport const getUsers = async () => {\n  try {\n    const users = await apiRequest('/users');\n    return Array.isArray(users) ? users : users.users || [];\n  } catch (error) {\n    console.error('Error al obtener usuarios:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Obtener usuario por ID\r\n */\nexport const getUserById = async id => {\n  try {\n    const user = await apiRequest(`/users/${id}`);\n    return user.user || user;\n  } catch (error) {\n    console.error('Error al obtener usuario:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Actualizar usuario\r\n */\nexport const updateUser = async (id, userData) => {\n  try {\n    const user = await apiRequest(`/users/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(userData)\n    });\n    return user.user || user;\n  } catch (error) {\n    console.error('Error al actualizar usuario:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Actualizar rol de usuario\r\n */\nexport const updateUserRole = async (id, role) => {\n  try {\n    const user = await apiRequest(`/users/${id}/role`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        role\n      })\n    });\n    return user.user || user;\n  } catch (error) {\n    console.error('Error al actualizar rol de usuario:', error);\n    throw error;\n  }\n};\n/**\r\n * Eliminar usuario\r\n */\nexport const deleteUser = async id => {\n  try {\n    await apiRequest(`/users/${id}`, {\n      method: 'DELETE'\n    });\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar usuario:', error);\n    throw error;\n  }\n};\n\n// ========== AUTENTICACIÓN ==========\n\n/**\r\n * Autenticar usuario\r\n */\nexport const loginUser = async credentials => {\n  try {\n    const response = await apiRequest('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n    console.log('Login response del backend:', response);\n    if (response.success || response.user) {\n      return {\n        success: true,\n        user: response.user || response.data.user,\n        token: response.token || response.data.token\n      };\n    }\n    throw new Error(response.message || 'Error en el login');\n  } catch (error) {\n    console.error('Error en login del backend:', error);\n\n    // Fallback a simulación para desarrollo\n    if (credentials.email === 'admin@canasta.com' && credentials.password === 'admin123') {\n      return {\n        success: true,\n        user: {\n          id: 1,\n          name: 'Administrador',\n          email: 'admin@canasta.com',\n          role: 'admin'\n        }\n      };\n    } else if (credentials.email === 'usuario@canasta.com' && credentials.password === 'user123') {\n      return {\n        success: true,\n        user: {\n          id: 2,\n          name: 'Usuario Demo',\n          email: 'usuario@canasta.com',\n          role: 'user'\n        }\n      };\n    } else {\n      throw new Error('Credenciales incorrectas');\n    }\n  }\n};\n\n/**\r\n * Registrar nuevo usuario\r\n */\nexport const registerUser = async userData => {\n  try {\n    const response = await apiRequest('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n    return {\n      success: true,\n      user: response.user || response.data.user,\n      token: response.token || response.data.token\n    };\n  } catch (error) {\n    console.error('Error al registrar usuario:', error);\n    throw error;\n  }\n};\n\n// ========== PEDIDOS ==========\n\n/**\r\n * Obtener pedidos\r\n */\nexport const getOrders = async () => {\n  try {\n    const orders = await apiRequest('/orders');\n    return Array.isArray(orders) ? orders : orders.orders || [];\n  } catch (error) {\n    console.error('Error al obtener pedidos:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Crear nuevo pedido\r\n */\nexport const createOrder = async orderData => {\n  try {\n    const order = await apiRequest('/orders', {\n      method: 'POST',\n      body: JSON.stringify(orderData)\n    });\n    return order.order || order;\n  } catch (error) {\n    console.error('Error al crear pedido:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Actualizar estado del pedido\r\n */\nexport const updateOrderStatus = async (id, status) => {\n  try {\n    const order = await apiRequest(`/orders/${id}/status`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        status\n      })\n    });\n    return order.order || order;\n  } catch (error) {\n    console.error('Error al actualizar estado del pedido:', error);\n    throw error;\n  }\n};\n\n// ========== DATOS MOCK PARA FALLBACK ==========\n\nconst getMockProducts = () => {\n  return [{\n    _id: '1',\n    name: 'Manzanas Rojas Orgánicas (MOCK)',\n    description: 'Datos de prueba - Backend no conectado',\n    price: 15.99,\n    producer: {\n      _id: '1',\n      name: 'Finca Los Manzanos'\n    },\n    category: {\n      _id: '1',\n      name: 'Frutas'\n    },\n    images: [{\n      url: '/images/manzanas.jpg',\n      isPrimary: true\n    }],\n    stock: 100,\n    unit: 'kg',\n    isOrganic: true,\n    isAvailable: true,\n    isFeatured: true,\n    tags: ['manzana', 'orgánico']\n  }];\n};\nconst getMockCategories = () => {\n  return [{\n    _id: '1',\n    name: 'Frutas',\n    description: 'Frutas frescas',\n    icon: 'fas fa-apple-alt'\n  }, {\n    _id: '2',\n    name: 'Verduras',\n    description: 'Verduras frescas',\n    icon: 'fas fa-carrot'\n  }, {\n    _id: '3',\n    name: 'Lácteos',\n    description: 'Productos lácteos',\n    icon: 'fas fa-cheese'\n  }];\n};\nconst getMockProducers = () => {\n  return [{\n    _id: '1',\n    name: 'Finca Los Manzanos',\n    email: 'contacto@losmanzanos.com'\n  }, {\n    _id: '2',\n    name: 'Lácteos San José',\n    email: 'info@lacteossanjose.com'\n  }];\n};\nconst getMockLocations = () => {\n  return [{\n    _id: '1',\n    city: 'Tunja',\n    department: 'Boyacá'\n  }, {\n    _id: '2',\n    city: 'Bogotá',\n    department: 'Cundinamarca'\n  }];\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","apiRequest","endpoint","options","url","token","localStorage","getItem","config","headers","Authorization","response","fetch","ok","errorData","json","catch","Error","message","status","data","success","error","console","apiRequestFormData","formData","method","body","getProducts","products","log","Array","isArray","getMockProducts","getProductById","id","product","createProduct","productData","FormData","Object","keys","forEach","key","append","JSON","stringify","images","length","image","updateProduct","deleteProduct","filterProducts","filters","params","URLSearchParams","category","producer","location","priceMin","priceMax","search","toString","getCategories","categories","getMockCategories","getCategoryById","createCategory","categoryData","updateCategory","deleteCategory","getProducers","producers","getMockProducers","getProducerById","createProducer","producerData","avatar","updateProducer","deleteProducer","getLocations","locations","getMockLocations","getLocationById","createLocation","locationData","updateLocation","deleteLocation","getUsers","users","getUserById","user","updateUser","userData","updateUserRole","role","deleteUser","loginUser","credentials","email","password","name","registerUser","getOrders","orders","createOrder","orderData","order","updateOrderStatus","_id","description","price","isPrimary","stock","unit","isOrganic","isAvailable","isFeatured","tags","icon","city","department"],"sources":["C:/Users/Bedoya/Desktop/Programming learning/Canasta Campesina/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\r\n\r\n/**\r\n * Función helper para realizar peticiones HTTP con autenticación\r\n */\r\nconst apiRequest = async (endpoint, options = {}) => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  \r\n  // Obtener token de autenticación\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...(token && { Authorization: `Bearer ${token}` }),\r\n      ...options.headers,\r\n    },\r\n    ...options,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, config);\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Si la respuesta tiene estructura {success: true, data: {...}}\r\n    if (data.success && data.data) {\r\n      return data.data;\r\n    }\r\n    \r\n    // Si la respuesta es directamente un array o objeto\r\n    return data;\r\n    \r\n  } catch (error) {\r\n    console.error('API Request Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Función helper para peticiones con FormData (archivos)\r\n */\r\nconst apiRequestFormData = async (endpoint, formData, method = 'POST') => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  const token = localStorage.getItem('token');\r\n  \r\n  try {\r\n    const response = await fetch(url, {\r\n      method,\r\n      headers: {\r\n        ...(token && { Authorization: `Bearer ${token}` })\r\n      },\r\n      body: formData\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data.data || data;\r\n    \r\n  } catch (error) {\r\n    console.error('API FormData Request Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ========== PRODUCTOS ==========\r\n\r\n/**\r\n * Obtener todos los productos\r\n */\r\nexport const getProducts = async () => {\r\n  try {\r\n    const products = await apiRequest('/products');\r\n    console.log('Productos obtenidos del backend:', products);\r\n    return Array.isArray(products) ? products : products.products || [];\r\n  } catch (error) {\r\n    console.error('Error al obtener productos del backend:', error);\r\n    return getMockProducts();\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener producto por ID\r\n */\r\nexport const getProductById = async (id) => {\r\n  try {\r\n    const product = await apiRequest(`/products/${id}`);\r\n    return product.product || product;\r\n  } catch (error) {\r\n    console.error('Error al obtener producto:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Crear nuevo producto\r\n */\r\nexport const createProduct = async (productData) => {\r\n  try {\r\n    const formData = new FormData();\r\n    \r\n    // Agregar campos del producto\r\n    Object.keys(productData).forEach(key => {\r\n      if (key !== 'images') {\r\n        if (Array.isArray(productData[key])) {\r\n          formData.append(key, JSON.stringify(productData[key]));\r\n        } else {\r\n          formData.append(key, productData[key]);\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Agregar imágenes si existen\r\n    if (productData.images && productData.images.length > 0) {\r\n      productData.images.forEach(image => {\r\n        formData.append('images', image);\r\n      });\r\n    }\r\n    \r\n    const response = await apiRequestFormData('/products', formData, 'POST');\r\n    return response.product || response;\r\n  } catch (error) {\r\n    console.error('Error al crear producto:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Actualizar producto\r\n */\r\nexport const updateProduct = async (id, productData) => {\r\n  try {\r\n    const formData = new FormData();\r\n    \r\n    Object.keys(productData).forEach(key => {\r\n      if (key !== 'images') {\r\n        if (Array.isArray(productData[key])) {\r\n          formData.append(key, JSON.stringify(productData[key]));\r\n        } else {\r\n          formData.append(key, productData[key]);\r\n        }\r\n      }\r\n    });\r\n    \r\n    if (productData.images && productData.images.length > 0) {\r\n      productData.images.forEach(image => {\r\n        formData.append('images', image);\r\n      });\r\n    }\r\n    \r\n    const response = await apiRequestFormData(`/products/${id}`, formData, 'PUT');\r\n    return response.product || response;\r\n  } catch (error) {\r\n    console.error('Error al actualizar producto:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Eliminar producto\r\n */\r\nexport const deleteProduct = async (id) => {\r\n  try {\r\n    await apiRequest(`/products/${id}`, { method: 'DELETE' });\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al eliminar producto:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Filtrar productos\r\n */\r\nexport const filterProducts = async (filters) => {\r\n  try {\r\n    const params = new URLSearchParams();\r\n    \r\n    console.log('Filtros enviados desde frontend:', filters);\r\n    \r\n    if (filters.category && filters.category !== '') {\r\n      params.append('category', filters.category);\r\n    }\r\n    if (filters.producer && filters.producer !== '') {\r\n      params.append('producer', filters.producer);\r\n    }\r\n    if (filters.location && filters.location !== '') {\r\n      params.append('location', filters.location);\r\n    }\r\n    if (filters.priceMin && filters.priceMin !== '') {\r\n      params.append('priceMin', filters.priceMin);\r\n    }\r\n    if (filters.priceMax && filters.priceMax !== '') {\r\n      params.append('priceMax', filters.priceMax);\r\n    }\r\n    if (filters.search && filters.search !== '') {\r\n      params.append('search', filters.search);\r\n    }\r\n\r\n    const url = `/products?${params.toString()}`;\r\n    console.log('URL de filtrado:', `${API_BASE_URL}${url}`);\r\n    \r\n    const products = await apiRequest(url);\r\n    console.log('Productos filtrados recibidos:', products);\r\n    \r\n    return Array.isArray(products) ? products : products.products || [];\r\n  } catch (error) {\r\n    console.error('Error al filtrar productos del backend:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// ========== CATEGORÍAS ==========\r\n\r\n/**\r\n * Obtener todas las categorías\r\n */\r\nexport const getCategories = async () => {\r\n  try {\r\n    const categories = await apiRequest('/categories');\r\n    console.log('Categorías obtenidas del backend:', categories);\r\n    return Array.isArray(categories) ? categories : categories.categories || [];\r\n  } catch (error) {\r\n    console.error('Error al obtener categorías del backend:', error);\r\n    return getMockCategories();\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener categoría por ID\r\n */\r\nexport const getCategoryById = async (id) => {\r\n  try {\r\n    const category = await apiRequest(`/categories/${id}`);\r\n    return category.category || category;\r\n  } catch (error) {\r\n    console.error('Error al obtener categoría:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Crear nueva categoría\r\n */\r\nexport const createCategory = async (categoryData) => {\r\n  try {\r\n    const category = await apiRequest('/categories', {\r\n      method: 'POST',\r\n      body: JSON.stringify(categoryData)\r\n    });\r\n    return category.category || category;\r\n  } catch (error) {\r\n    console.error('Error al crear categoría:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Actualizar categoría\r\n */\r\nexport const updateCategory = async (id, categoryData) => {\r\n  try {\r\n    const category = await apiRequest(`/categories/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(categoryData)\r\n    });\r\n    return category.category || category;\r\n  } catch (error) {\r\n    console.error('Error al actualizar categoría:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Eliminar categoría\r\n */\r\nexport const deleteCategory = async (id) => {\r\n  try {\r\n    await apiRequest(`/categories/${id}`, { method: 'DELETE' });\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al eliminar categoría:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ========== PRODUCTORES ==========\r\n\r\n/**\r\n * Obtener todos los productores\r\n */\r\nexport const getProducers = async () => {\r\n  try {\r\n    const producers = await apiRequest('/producers');\r\n    console.log('Productores obtenidos del backend:', producers);\r\n    return Array.isArray(producers) ? producers : producers.producers || [];\r\n  } catch (error) {\r\n    console.error('Error al obtener productores del backend:', error);\r\n    return getMockProducers();\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener productor por ID\r\n */\r\nexport const getProducerById = async (id) => {\r\n  try {\r\n    const producer = await apiRequest(`/producers/${id}`);\r\n    return producer.producer || producer;\r\n  } catch (error) {\r\n    console.error('Error al obtener productor:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Crear nuevo productor\r\n */\r\nexport const createProducer = async (producerData) => {\r\n  try {\r\n    const formData = new FormData();\r\n    \r\n    Object.keys(producerData).forEach(key => {\r\n      if (key !== 'avatar') {\r\n        if (Array.isArray(producerData[key])) {\r\n          formData.append(key, JSON.stringify(producerData[key]));\r\n        } else {\r\n          formData.append(key, producerData[key]);\r\n        }\r\n      }\r\n    });\r\n    \r\n    if (producerData.avatar) {\r\n      formData.append('avatar', producerData.avatar);\r\n    }\r\n    \r\n    const response = await apiRequestFormData('/producers', formData, 'POST');\r\n    return response.producer || response;\r\n  } catch (error) {\r\n    console.error('Error al crear productor:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Actualizar productor\r\n */\r\nexport const updateProducer = async (id, producerData) => {\r\n  try {\r\n    const formData = new FormData();\r\n    \r\n    Object.keys(producerData).forEach(key => {\r\n      if (key !== 'avatar') {\r\n        if (Array.isArray(producerData[key])) {\r\n          formData.append(key, JSON.stringify(producerData[key]));\r\n        } else {\r\n          formData.append(key, producerData[key]);\r\n        }\r\n      }\r\n    });\r\n    \r\n    if (producerData.avatar) {\r\n      formData.append('avatar', producerData.avatar);\r\n    }\r\n    \r\n    const response = await apiRequestFormData(`/producers/${id}`, formData, 'PUT');\r\n    return response.producer || response;\r\n  } catch (error) {\r\n    console.error('Error al actualizar productor:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Eliminar productor\r\n */\r\nexport const deleteProducer = async (id) => {\r\n  try {\r\n    await apiRequest(`/producers/${id}`, { method: 'DELETE' });\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al eliminar productor:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ========== UBICACIONES ==========\r\n\r\n/**\r\n * Obtener todas las ubicaciones\r\n */\r\nexport const getLocations = async () => {\r\n  try {\r\n    const locations = await apiRequest('/locations');\r\n    console.log('Ubicaciones obtenidas del backend:', locations);\r\n    return Array.isArray(locations) ? locations : locations.locations || [];\r\n  } catch (error) {\r\n    console.error('Error al obtener ubicaciones del backend:', error);\r\n    return getMockLocations();\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener ubicación por ID\r\n */\r\nexport const getLocationById = async (id) => {\r\n  try {\r\n    const location = await apiRequest(`/locations/${id}`);\r\n    return location.location || location;\r\n  } catch (error) {\r\n    console.error('Error al obtener ubicación:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Crear nueva ubicación\r\n */\r\nexport const createLocation = async (locationData) => {\r\n  try {\r\n    const location = await apiRequest('/locations', {\r\n      method: 'POST',\r\n      body: JSON.stringify(locationData)\r\n    });\r\n    return location.location || location;\r\n  } catch (error) {\r\n    console.error('Error al crear ubicación:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Actualizar ubicación\r\n */\r\nexport const updateLocation = async (id, locationData) => {\r\n  try {\r\n    const location = await apiRequest(`/locations/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(locationData)\r\n    });\r\n    return location.location || location;\r\n  } catch (error) {\r\n    console.error('Error al actualizar ubicación:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Eliminar ubicación\r\n */\r\nexport const deleteLocation = async (id) => {\r\n  try {\r\n    await apiRequest(`/locations/${id}`, { method: 'DELETE' });\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al eliminar ubicación:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ========== USUARIOS ==========\r\n\r\n/**\r\n * Obtener todos los usuarios\r\n */\r\nexport const getUsers = async () => {\r\n  try {\r\n    const users = await apiRequest('/users');\r\n    return Array.isArray(users) ? users : users.users || [];\r\n  } catch (error) {\r\n    console.error('Error al obtener usuarios:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener usuario por ID\r\n */\r\nexport const getUserById = async (id) => {\r\n  try {\r\n    const user = await apiRequest(`/users/${id}`);\r\n    return user.user || user;\r\n  } catch (error) {\r\n    console.error('Error al obtener usuario:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Actualizar usuario\r\n */\r\nexport const updateUser = async (id, userData) => {\r\n  try {\r\n    const user = await apiRequest(`/users/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(userData)\r\n    });\r\n    return user.user || user;\r\n  } catch (error) {\r\n    console.error('Error al actualizar usuario:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Actualizar rol de usuario\r\n */\r\nexport const updateUserRole = async (id, role) => {\r\n  try {\r\n    const user = await apiRequest(`/users/${id}/role`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ role })\r\n    });\r\n    return user.user || user;\r\n  } catch (error) {\r\n    console.error('Error al actualizar rol de usuario:', error);\r\n    throw error;\r\n  }\r\n};\r\n/**\r\n * Eliminar usuario\r\n */\r\nexport const deleteUser = async (id) => {\r\n  try {\r\n    await apiRequest(`/users/${id}`, { method: 'DELETE' });\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al eliminar usuario:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ========== AUTENTICACIÓN ==========\r\n\r\n/**\r\n * Autenticar usuario\r\n */\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await apiRequest('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify(credentials)\r\n    });\r\n    \r\n    console.log('Login response del backend:', response);\r\n    \r\n    if (response.success || response.user) {\r\n      return {\r\n        success: true,\r\n        user: response.user || response.data.user,\r\n        token: response.token || response.data.token\r\n      };\r\n    }\r\n    \r\n    throw new Error(response.message || 'Error en el login');\r\n    \r\n  } catch (error) {\r\n    console.error('Error en login del backend:', error);\r\n    \r\n    // Fallback a simulación para desarrollo\r\n    if (credentials.email === 'admin@canasta.com' && credentials.password === 'admin123') {\r\n      return {\r\n        success: true,\r\n        user: {\r\n          id: 1,\r\n          name: 'Administrador',\r\n          email: 'admin@canasta.com',\r\n          role: 'admin'\r\n        }\r\n      };\r\n    } else if (credentials.email === 'usuario@canasta.com' && credentials.password === 'user123') {\r\n      return {\r\n        success: true,\r\n        user: {\r\n          id: 2,\r\n          name: 'Usuario Demo',\r\n          email: 'usuario@canasta.com',\r\n          role: 'user'\r\n        }\r\n      };\r\n    } else {\r\n      throw new Error('Credenciales incorrectas');\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Registrar nuevo usuario\r\n */\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await apiRequest('/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData)\r\n    });\r\n    \r\n    return {\r\n      success: true,\r\n      user: response.user || response.data.user,\r\n      token: response.token || response.data.token\r\n    };\r\n  } catch (error) {\r\n    console.error('Error al registrar usuario:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ========== PEDIDOS ==========\r\n\r\n/**\r\n * Obtener pedidos\r\n */\r\nexport const getOrders = async () => {\r\n  try {\r\n    const orders = await apiRequest('/orders');\r\n    return Array.isArray(orders) ? orders : orders.orders || [];\r\n  } catch (error) {\r\n    console.error('Error al obtener pedidos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Crear nuevo pedido\r\n */\r\nexport const createOrder = async (orderData) => {\r\n  try {\r\n    const order = await apiRequest('/orders', {\r\n      method: 'POST',\r\n      body: JSON.stringify(orderData)\r\n    });\r\n    return order.order || order;\r\n  } catch (error) {\r\n    console.error('Error al crear pedido:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Actualizar estado del pedido\r\n */\r\nexport const updateOrderStatus = async (id, status) => {\r\n  try {\r\n    const order = await apiRequest(`/orders/${id}/status`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ status })\r\n    });\r\n    return order.order || order;\r\n  } catch (error) {\r\n    console.error('Error al actualizar estado del pedido:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ========== DATOS MOCK PARA FALLBACK ==========\r\n\r\nconst getMockProducts = () => {\r\n  return [\r\n    {\r\n      _id: '1',\r\n      name: 'Manzanas Rojas Orgánicas (MOCK)',\r\n      description: 'Datos de prueba - Backend no conectado',\r\n      price: 15.99,\r\n      producer: { _id: '1', name: 'Finca Los Manzanos' },\r\n      category: { _id: '1', name: 'Frutas' },\r\n      images: [{ url: '/images/manzanas.jpg', isPrimary: true }],\r\n      stock: 100,\r\n      unit: 'kg',\r\n      isOrganic: true,\r\n      isAvailable: true,\r\n      isFeatured: true,\r\n      tags: ['manzana', 'orgánico']\r\n    }\r\n  ];\r\n};\r\n\r\nconst getMockCategories = () => {\r\n  return [\r\n    { _id: '1', name: 'Frutas', description: 'Frutas frescas', icon: 'fas fa-apple-alt' },\r\n    { _id: '2', name: 'Verduras', description: 'Verduras frescas', icon: 'fas fa-carrot' },\r\n    { _id: '3', name: 'Lácteos', description: 'Productos lácteos', icon: 'fas fa-cheese' }\r\n  ];\r\n};\r\n\r\nconst getMockProducers = () => {\r\n  return [\r\n    { _id: '1', name: 'Finca Los Manzanos', email: 'contacto@losmanzanos.com' },\r\n    { _id: '2', name: 'Lácteos San José', email: 'info@lacteossanjose.com' }\r\n  ];\r\n};\r\n\r\nconst getMockLocations = () => {\r\n  return [\r\n    { _id: '1', city: 'Tunja', department: 'Boyacá' },\r\n    { _id: '2', city: 'Bogotá', department: 'Cundinamarca' }\r\n  ];\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}